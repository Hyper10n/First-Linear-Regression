import pandas as pd
from sklearn import preprocessing, cross_validation
from sklearn.linear_model import LinearRegression

df = pd.read_csv('/home/thomas/Downloads/RealEstate.csv')
y = df['Price']
df.drop(['MLS', 'Price', 'Location'], axis=1, inplace=True)   # I chose to drop the MLS id because it is irrelevant. The Price was
                                                              # removed because it is the label data. After consideration, I 
                                                              # removed the Location attriubte as well because a one hot encode
                                                              # would have required the addition of 54 features to the dataframe
                                                              # to give unique, yet non-misleading integer values to the Location
                                                              # data.

df['Short Sale'] = 0                             #Preparing to one-hot encode the type of sale (Regular, Short Sale, Foreclosure)
df['Regular'] = 0
df['Foreclosure'] = 0

k = 0                                   #Not optimized for speed. Feel free suggest a faster, more concise way to obtain the result
while k < len(df.index):                      
    for _ in df['Status']:
        if _ == 'Short Sale':
            df['Short Sale'].iloc[k] = 1
        elif _ == 'Regular':
            df['Regular'].iloc[k] = 1
        else:
            df['Foreclosure'].iloc[k] = 1
        k += 1
df = df.drop(['Status'], 1)

X = preprocessing.scale(df)
X_train, X_test, y_train, y_test = cross_validation.train_test_split(X, y, test_size=0.1)

reg = LinearRegression(n_jobs=-1)
reg.fit(X_train, y_train)
accuracy = reg.score(X_test, y_test)
print(accuracy * 100)

[Output] = 93.1499256538
